{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\my-react-app\\\\src\\\\components\\\\Sidemenu.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n/* This defines the actual bar going down the screen */\n\nconst StyledSideNav = styled.div`\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 175px;     /* Set the width of the sidebar */\n  z-index: 1;      /* Stay on top of everything */\n  top: 0;\n  left:75px;      /* Stay on left*/\n  background: #E6E6E6;\n  ;\n  color:#fff;\n  overflow-x: hidden;     /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\n_c = StyledSideNav;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        active: path\n      });\n    };\n\n    this.state = {\n      activePath: '/',\n      items: [{\n        path: '/workflows',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'Workflows',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/timelines',\n        name: 'Timelines',\n        key: 2\n      }, {\n        path: '/options',\n        name: 'Options',\n        key: 3\n      }, {\n        path: '/designs',\n        name: 'Designs',\n        key: 4\n      }, {\n        path: '/packs',\n        name: 'Packs',\n        key: 5\n      }, {\n        path: '/tracker',\n        name: 'Tracker',\n        key: 6\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(StyledSideNav, {\n      children:\n      /* items = just array AND map() loops thru that array AND item is param of that loop */\n      items.map(item => {\n        /* Return however many NavItems in array to be rendered */\n        return /*#__PURE__*/_jsxDEV(NavItem, {\n          path: item.path,\n          name: item.name,\n          onItemClick: this.onItemClick\n          /* Simply passed an entire function to onClick prop */\n          ,\n          active: item.path === activePath\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst StyledNavItem = styled.div`\n  height: 70px;\n  width: 75px; /* width must be same size as NavBar to center */\n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  margin-bottom: 0;   /* Puts space between NavItems */\n  a {\n    padding-top:40px;\n    font-size: 1.7em;\n    color: ${props => props.active ? \"white\" : \"#9FFFCB\"};\n    :hover {\n      opacity: 0.7;\n      text-decoration: none; /* Gets rid of underlining of icons */\n    }  \n  }\n`;\n_c2 = StyledNavItem;\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        path,\n        onClick\n      } = this.props;\n      onClick(path);\n    };\n  }\n\n  render() {\n    const {\n      active\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(StyledNavItem, {\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: this.props.path,\n        className: this.props.name,\n        placeholder: this.props.name,\n        onClick: this.handleClick,\n        children: /*#__PURE__*/_jsxDEV(NavName, {\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst NavName = styled.div`\n    font-size:14px;\n    padding:20px;\n  `;\n_c3 = NavName;\nexport default class Sidemenu extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledSideNav\");\n$RefreshReg$(_c2, \"StyledNavItem\");\n$RefreshReg$(_c3, \"NavName\");","map":{"version":3,"sources":["D:/my-react-app/src/components/Sidemenu.js"],"names":["React","styled","BrowserRouter","Router","Route","Link","StyledSideNav","div","SideNav","Component","constructor","props","onItemClick","path","setState","active","state","activePath","items","name","key","render","map","item","StyledNavItem","NavItem","handleClick","onClick","NavName","Sidemenu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 175px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 0;\r\n  left:75px;      /* Stay on left*/\r\n  background: #E6E6E6;\r\n  ;\r\n  color:#fff;\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: '/',\r\n          items: [\r\n            {\r\n              path: '/workflows', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Workflows',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/timelines',\r\n              name: 'Timelines',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/options',\r\n              name: 'Options',\r\n              key: 3\r\n            },\r\n            {\r\n                path: '/designs',\r\n                name: 'Designs',\r\n                key: 4\r\n            },\r\n            {\r\n                path: '/packs',\r\n                name: 'Packs',\r\n                key: 5\r\n            },\r\n            {\r\n                path: '/tracker',\r\n                name: 'Tracker',\r\n                key: 6\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n\r\n      onItemClick = (path) => {\r\n          this.setState({active: path})\r\n      }\r\n    render() {\r\n        const {items, activePath} = this.state;\r\n        return (\r\n            <StyledSideNav>\r\n                {\r\n                    /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n                    items.map((item) => {\r\n                    /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                <NavItem path={item.path} name={item.name} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n        \r\n            )\r\n          })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n      }\r\n}\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    padding-top:40px;\r\n    font-size: 1.7em;\r\n    color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    }  \r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const {path, onClick} = this.props;\r\n        onClick(path);\r\n    }\r\n    render() {\r\n        const { active } = this.props;\r\n      return (\r\n        <StyledNavItem active={active}>\r\n            <Link to={this.props.path} className={this.props.name} placeholder={this.props.name} onClick={this.handleClick}>\r\n                <NavName>{this.props.name}</NavName>\r\n            </Link>\r\n        </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  const NavName = styled.div`\r\n    font-size:14px;\r\n    padding:20px;\r\n  `;\r\n\r\nexport default class Sidemenu extends React.Component {\r\n  render() {\r\n    return (\r\n        <SideNav></SideNav>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
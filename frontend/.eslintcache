[{"D:\\Quadrant\\frontend\\src\\index.js":"1","D:\\Quadrant\\frontend\\src\\App.js":"2","D:\\Quadrant\\frontend\\src\\reportWebVitals.js":"3","D:\\Quadrant\\frontend\\src\\About.js":"4","D:\\Quadrant\\frontend\\src\\NoMatch.js":"5","D:\\Quadrant\\frontend\\src\\Options.js":"6","D:\\Quadrant\\frontend\\src\\Home.js":"7","D:\\Quadrant\\frontend\\src\\components\\NavigationBar.js":"8","D:\\Quadrant\\frontend\\src\\components\\Sidebar.js":"9","D:\\Quadrant\\frontend\\src\\components\\Sidemenu.js":"10","D:\\Quadrant\\frontend\\src\\components\\Op.js":"11","D:\\Quadrant\\frontend\\src\\graphql\\index.js":"12","D:\\Quadrant\\frontend\\src\\graphql\\queries.js":"13","D:\\Quadrant\\frontend\\src\\graphql\\mutation.js":"14","D:\\StyleAtlas\\frontend\\src\\index.js":"15","D:\\StyleAtlas\\frontend\\src\\App.js":"16","D:\\StyleAtlas\\frontend\\src\\reportWebVitals.js":"17","D:\\StyleAtlas\\frontend\\src\\NoMatch.js":"18","D:\\StyleAtlas\\frontend\\src\\About.js":"19","D:\\StyleAtlas\\frontend\\src\\Home.js":"20","D:\\StyleAtlas\\frontend\\src\\Options.js":"21","D:\\StyleAtlas\\frontend\\src\\components\\Sidebar.js":"22","D:\\StyleAtlas\\frontend\\src\\components\\Sidemenu.js":"23","D:\\StyleAtlas\\frontend\\src\\components\\Op.js":"24","D:\\StyleAtlas\\frontend\\src\\graphql\\index.js":"25","D:\\StyleAtlas\\frontend\\src\\graphql\\mutation.js":"26","D:\\StyleAtlas\\frontend\\src\\graphql\\queries.js":"27","D:\\StyleAtlas\\frontend\\src\\graphql\\update_mutation.js":"28"},{"size":1267,"mtime":1613036905467,"results":"29","hashOfConfig":"30"},{"size":1464,"mtime":1612974525932,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":433,"mtime":1612743737971,"results":"33","hashOfConfig":"30"},{"size":250,"mtime":1612743724331,"results":"34","hashOfConfig":"30"},{"size":5537,"mtime":1613283491443,"results":"35","hashOfConfig":"30"},{"size":0,"mtime":1612844603391,"results":"36","hashOfConfig":"30"},{"size":1105,"mtime":1612742927621,"results":"37","hashOfConfig":"30"},{"size":3336,"mtime":1612841837334,"results":"38","hashOfConfig":"30"},{"size":3827,"mtime":1612841663013,"results":"39","hashOfConfig":"30"},{"size":459,"mtime":1613284604295,"results":"40","hashOfConfig":"30"},{"size":96,"mtime":1613126376608,"results":"41","hashOfConfig":"30"},{"size":150,"mtime":1612966813489,"results":"42","hashOfConfig":"30"},{"size":326,"mtime":1613036784242,"results":"43","hashOfConfig":"30"},{"size":1267,"mtime":1613036905467,"results":"44","hashOfConfig":"45"},{"size":1474,"mtime":1613399610559,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":250,"mtime":1612743724331,"results":"48","hashOfConfig":"45"},{"size":433,"mtime":1612743737971,"results":"49","hashOfConfig":"45"},{"size":0,"mtime":1612844603391,"results":"50","hashOfConfig":"45"},{"size":8111,"mtime":1613406546682,"results":"51","hashOfConfig":"45"},{"size":3328,"mtime":1613311115003,"results":"52","hashOfConfig":"45"},{"size":3819,"mtime":1613311146227,"results":"53","hashOfConfig":"45"},{"size":485,"mtime":1613313067416,"results":"54","hashOfConfig":"45"},{"size":147,"mtime":1613315214020,"results":"55","hashOfConfig":"45"},{"size":326,"mtime":1613314834365,"results":"56","hashOfConfig":"45"},{"size":160,"mtime":1613294633806,"results":"57","hashOfConfig":"45"},{"size":386,"mtime":1613315712535,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"dxuy3s",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"fuo95b",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"D:\\Quadrant\\frontend\\src\\index.js",[],["126","127"],"D:\\Quadrant\\frontend\\src\\App.js",[],"D:\\Quadrant\\frontend\\src\\reportWebVitals.js",[],"D:\\Quadrant\\frontend\\src\\About.js",[],"D:\\Quadrant\\frontend\\src\\NoMatch.js",[],"D:\\Quadrant\\frontend\\src\\Options.js",["128","129","130"],"import { useQuery, useMutation } from '@apollo/client'\r\nimport React, {useState, useEffect, useCallback} from 'react';\r\nimport {Tabs, Tab, Row, Button, Col, Form, Card, Container} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from 'styled-components';\r\nimport logo from './fashion.jpeg';\r\nimport { TextField, Select, MenuItem,InputLabel, InputLabelProps} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n  POSTS_QUERY,\r\n  CREATE_OPTION_MUTATION,\r\n} from './graphql'\r\nimport Op from './components/Op'\r\n\r\nconst GridWrapper = styled.div`\r\n  display: block;\r\n  grid-gap: 10px;\r\n  margin-left: 270px;\r\n  background-color:#fff;\r\n  margin-right: 6em;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-auto-rows: minmax(25px, auto);\r\n`;\r\n\r\n\r\n\r\nexport const Options = () => {\r\n\r\n\r\n  const defaultProps = {\r\n    options: fabricOptions,\r\n    getOptionLabel: (option) => option.title,\r\n  };\r\n\r\n  let fab = \"\";\r\n  const [formName, setFormName] = useState('')\r\n  const [formType, setFormType] = useState('')\r\n  // const [formFabric, setFormFabric] = useState('')\r\n\r\nconst handleInputChange = (event, value) =>{\r\n   fab = value;\r\n   console.log(fab)\r\n}\r\n\r\nconst onEditInformation = () => {\r\n  console.log(\"Hello\");\r\n};\r\n  \r\n\r\n  const { loading,error, data } = useQuery(POSTS_QUERY)\r\n  \r\n  const [createOption] = useMutation(CREATE_OPTION_MUTATION)\r\n\r\n  const handleFormSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault()\r\n      console.log(\"name\"+fab);\r\n      if (!formName || !formType || !fab) return\r\n\r\n      createOption({\r\n        variables: {\r\n          name: formName,\r\n          type: formType,\r\n          fabric: fab,\r\n        },\r\n        // refetchQueries: [\r\n        //   { query: POSTS_QUERY }\r\n        // ]\r\n        \r\n        \r\n      })\r\n\r\n      setFormName('')\r\n      setFormType('')\r\n      //setFormFabric('')\r\n    },\r\n\r\n    [createOption, formName, formType, fab]\r\n  )\r\n\r\n\r\n return (\r\n   \r\n  <GridWrapper>\r\n    <Container>\r\n    <Form onSubmit={handleFormSubmit}>\r\n    <h5 className=\"option_heading p-4\">Option Attribute</h5>\r\n      <Row>\r\n        <Col lg=\"5\">\r\n          <img src={logo} width=\"100%\" />\r\n            <Col lg=\"4\" className=\"mt-4 py-3 pl-0 pr-0 add-image\">\r\n                <i className=\"far fa-file-image pb-2\"></i>\r\n                <p className=\"m-0\">ADD IMAGES</p>\r\n            </Col>\r\n        </Col>\r\n        <Col lg=\"7\">\r\n            <Card>\r\n              <Tabs defaultActiveKey=\"classification\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"classification\" title=\"CLASSIFICATION\">\r\n                    <Row className=\"mt-5\">\r\n                        <Col lg=\"6\" >\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                          Name\r\n                        </InputLabel>\r\n                          <TextField  id=\"name\" InputLabelProps={{ shrink: true }}  size=\"medium\" value={formName} fullWidth  onChange={(e) => setFormName(e.target.value)}> </TextField>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                          Type\r\n                        </InputLabel>\r\n                         <Select id=\"type\" label=\"Type\" value={formType}  size=\"medium\" fullWidth  onChange={(e) => setFormType(e.target.value)}>\r\n                          <MenuItem value=\"new\">New</MenuItem>\r\n                          <MenuItem value=\"old\">Old</MenuItem>\r\n                         </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"mt-4 pb-4\" lg=\"6\">\r\n                         <Autocomplete\r\n                          {...defaultProps}\r\n                          id=\"auto-complete\"\r\n                          // value ={formFabric} \r\n                          onInputChange={handleInputChange}          \r\n                          \r\n                          includeInputInList\r\n                          renderInput={(params) => <TextField {...params}  label=\"Fabric\"  margin=\"normal\" />}\r\n                        />\r\n                    </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\">Add options</Button> \r\n                    <Col xs=\"6\">\r\n                      {loading ? (\r\n                        <p>Loading...</p>\r\n                      ) : error ? (\r\n                        <p>Error :(((</p>\r\n                      ) : (\r\n                        data.options.map((option, id) => <Op data={option} key={id} onEdit = { onEditInformation } />)\r\n                      )}\r\n                    </Col>\r\n                </Tab>\r\n                <Tab eventKey=\"commerical\" title=\"COMMERICAL\">\r\n                 <p>Not yet implemented</p>\r\n                </Tab>\r\n                <Tab eventKey=\"notes\" title=\"NOTES\" >\r\n                 <p>Not yet implemented</p>\r\n                </Tab>\r\n                <Tab eventKey=\"links\" title=\"LINKS\" >\r\n                <p>Not yet implemented</p>\r\n                </Tab>\r\n            </Tabs>\r\n               \r\n                                   \r\n             \r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n      </Form>\r\n    </Container>\r\n    \r\n  </GridWrapper>\r\n)\r\n  }\r\n\r\n  const fabricOptions = [\r\n    {\r\n      title: \"Kurabo Selvedge Denim\"\r\n    },\r\n    {\r\n      title: \"Cone Selvedge Denim\"\r\n    },\r\n    {\r\n      title: \"Berto Selvedge Denim\"\r\n    }\r\n  ];\r\n\r\n","D:\\Quadrant\\frontend\\src\\Home.js",[],"D:\\Quadrant\\frontend\\src\\components\\NavigationBar.js",[],["131","132"],"D:\\Quadrant\\frontend\\src\\components\\Sidebar.js",["133","134"],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 75px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 0;      /* Stay at the top */\r\n  background-color: #222; /* Black */\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: '/home',\r\n          items: [\r\n            {\r\n              path: '/home', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Home',\r\n              css: 'fa fa-globe',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/about',\r\n              name: 'About',\r\n              css: 'fa fa-th',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/nomatch',\r\n              name: 'NoMatch',\r\n              css: 'fa fa-folder-open',\r\n              key: 3\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n\r\n      onItemClick = (path) => {\r\n          this.setState({active: path})\r\n      }\r\n    render() {\r\n        const {items, activePath} = this.state;\r\n        return (\r\n            <StyledSideNav>\r\n                {\r\n                    /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n                    items.map((item) => {\r\n                    /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n            )\r\n          })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n      }\r\n}\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    padding-top:120px;\r\n    font-size: 1.7em;\r\n    color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    }  \r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const {path, onItemClick} = this.props;\r\n        onItemClick(path);\r\n    }\r\n    render() {\r\n        const { active } = this.props;\r\n      return (\r\n        <StyledNavItem active={active}>\r\n            <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n                <NavIcon></NavIcon>\r\n            </Link>\r\n        </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  const NavIcon = styled.div`\r\n  `;\r\n\r\nexport default class Sidebar extends React.Component {\r\n  render() {\r\n    return (\r\n        <SideNav></SideNav>\r\n    );\r\n  }\r\n}","D:\\Quadrant\\frontend\\src\\components\\Sidemenu.js",["135","136"],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 175px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 0;\r\n  left:75px;      /* Stay on left*/\r\n  background: #E6E6E6;\r\n  ;\r\n  color:#fff;\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: '/options',\r\n          items: [\r\n            {\r\n              path: '/workflow', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Workflows',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/timelines',\r\n              name: 'Timelines',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/options',\r\n              name: 'Options',\r\n              key: 3\r\n            },\r\n            {\r\n                path: '/designs',\r\n                name: 'Designs',\r\n                key: 4\r\n            },\r\n            {\r\n                path: '/packs',\r\n                name: 'Packs',\r\n                key: 5\r\n            },\r\n            {\r\n                path: '/tracker',\r\n                name: 'Tracker',\r\n                key: 6\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n\r\n      onItemClick = (path) => {\r\n          this.setState({active: path})\r\n      }\r\n    render() {\r\n        const {items, activePath} = this.state;\r\n        return (\r\n            <StyledSideNav>\r\n                {\r\n                    /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n                    items.map((item) => {\r\n                    /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                <NavItem path={item.path} name={item.name} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n        \r\n            )\r\n          })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n      }\r\n}\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    padding-top:40px;\r\n    font-size: 1.7em;\r\n    text-align:center;\r\n    font-weight:300;\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    } \r\n\r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const {path, onItemClick} = this.props;\r\n        onItemClick(path);\r\n    }\r\n    render() {\r\n        const { active } = this.props;\r\n      return (\r\n        <StyledNavItem active={active}>\r\n            <Link to={this.props.path} className={this.props.name} placeholder={this.props.name} onClick={this.handleClick}>\r\n                <NavName>{this.props.name}</NavName>\r\n            </Link>\r\n        </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  const NavName = styled.div`\r\n    font-size:14px;\r\n    color:#000;\r\n    text-align:center; \r\n    padding-left:30px;\r\n    padding-top:70px;\r\n    color: ${(props) => props.active ? \"black\" : \"#000\"};\r\n  `;\r\n\r\nexport default class Sidemenu extends React.Component {\r\n  render() {\r\n    return (\r\n        <SideNav></SideNav>\r\n    );\r\n  }\r\n}","D:\\Quadrant\\frontend\\src\\components\\Op.js",[],"D:\\Quadrant\\frontend\\src\\graphql\\index.js",[],"D:\\Quadrant\\frontend\\src\\graphql\\queries.js",[],"D:\\Quadrant\\frontend\\src\\graphql\\mutation.js",[],"D:\\StyleAtlas\\frontend\\src\\index.js",[],["137","138"],"D:\\StyleAtlas\\frontend\\src\\App.js",[],"D:\\StyleAtlas\\frontend\\src\\reportWebVitals.js",[],"D:\\StyleAtlas\\frontend\\src\\NoMatch.js",[],"D:\\StyleAtlas\\frontend\\src\\About.js",[],"D:\\StyleAtlas\\frontend\\src\\Home.js",[],"D:\\StyleAtlas\\frontend\\src\\Options.js",["139","140","141","142","143","144","145"],"import { useQuery, useMutation } from '@apollo/client'\r\nimport React, {useState, useEffect, useCallback} from 'react';\r\nimport {Tabs, Tab, Row, Button, Col, Form, Card, Container} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from 'styled-components';\r\nimport logo from './fashion.jpeg';\r\nimport { TextField, Select, MenuItem,InputLabel, Table, TableBody ,TableCell , TableContainer , TableHead , TableRow ,Paper } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n  POSTS_QUERY,\r\n  CREATE_OPTION_MUTATION, UPDATE_OPTION\r\n} from './graphql'\r\n\r\n\r\nconst GridWrapper = styled.div`\r\n  display: block;\r\n  grid-gap: 10px;\r\n  margin-left: 270px;\r\n  background-color:#fff;\r\n  margin-right: 6em;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-auto-rows: minmax(25px, auto);\r\n`;\r\n\r\n\r\n export const Options = () => {\r\n\r\n\r\n  var fab = \"\", data_id = 0;\r\n  const [formID, setFormId] = useState('0');\r\n  const [formName, setFormName] = useState('');\r\n  const [formType, setFormType] = useState('');\r\n  const [formFabric, setFormFabric] = useState('');\r\n\r\n\r\n  const { loading,error, data } = useQuery(POSTS_QUERY)\r\n  \r\n  const [createOption] = useMutation(CREATE_OPTION_MUTATION)\r\n\r\n  const [updateOption] = useMutation(UPDATE_OPTION)\r\n\r\n\r\nconst onEditInformation = (object) => {\r\n\r\n    setFormId(object.id);\r\n    setFormName(object.name);\r\n    setFormType(object.type);\r\n    setFormFabric(object.fabric);\r\n  }\r\n\r\n//   const handleInputChange = (event, value) =>{\r\n//     fab = value;\r\n    \r\n//  }\r\n\r\n const OnUpdateFabricChange = \r\n  (e,value) =>{\r\n  setFormFabric(value);\r\n\r\n  if (!(formID.localeCompare(\"0\") == 0)){\r\n  updateOption({\r\n    variables: {\r\n      id: formID,\r\n      name: formName,\r\n      type: formType,\r\n      fabric: formFabric,\r\n    },\r\n    refetchQueries: [\r\n      { query: POSTS_QUERY }\r\n       ]\r\n  })\r\n  }\r\n\r\n}\r\n\r\n \r\n const onUpdateTypeChange = \r\n  (e,value) =>{\r\n\r\n  setFormType(e.target.value)\r\n  if (!(formID.localeCompare(\"0\") == 0)){\r\n  updateOption({\r\n    variables: {\r\n      id: formID,\r\n      name: formName,\r\n      type: formType,\r\n      fabric: formFabric,\r\n    },\r\n    refetchQueries: [\r\n      { query: POSTS_QUERY }\r\n       ]\r\n  })\r\n}\r\n}\r\n\r\n\r\n\r\n const onUpdateNameChange = useCallback(\r\n    (e) =>{\r\n    setFormName(e.target.value)\r\n  //  console.log(\"dataid:\"+ data_id);\r\n  \r\n    if (!(formID.localeCompare(\"0\") == 0)){\r\n\r\n      updateOption({\r\n        variables: {\r\n          id: formID,\r\n          name: formName,\r\n          type: formType,\r\n          fabric: formFabric,\r\n        },\r\n        refetchQueries: [\r\n          { query: POSTS_QUERY }\r\n          ]\r\n      })\r\n      \r\n    }\r\n },\r\n);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault()\r\n      console.log(\"name\"+fab);\r\n      if (!formName || !formType || !formFabric) return\r\n\r\n      createOption({\r\n        variables: {\r\n          name: formName,\r\n          type: formType,\r\n          fabric: formFabric,\r\n        },\r\n        refetchQueries: [\r\n        { query: POSTS_QUERY }\r\n         ]\r\n        \r\n        \r\n        \r\n      })\r\n\r\n      setFormName('')\r\n      setFormType('')\r\n      setFormFabric('')\r\n    \r\n    },\r\n\r\n    // [createOption, formName, formType, fab]\r\n  )\r\n  \r\n\r\n return (\r\n   \r\n  <GridWrapper>\r\n    <Container>\r\n    <Form onSubmit={handleFormSubmit}>\r\n    <h5 className=\"option_heading p-4\">Option Attribute</h5>\r\n      <Row>\r\n        <Col lg=\"5\">\r\n          <img src={logo} alt=\"fashion_image\" width=\"100%\" />\r\n            <Col lg=\"4\" className=\"mt-4 py-3 pl-0 pr-0 add-image\">\r\n                <i className=\"far fa-file-image pb-2\"></i>\r\n                <p className=\"m-0\">ADD IMAGES</p>\r\n            </Col>\r\n        </Col>\r\n        <Col lg=\"7\">\r\n            <Card>\r\n              <Tabs defaultActiveKey=\"classification\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"classification\" title=\"CLASSIFICATION\">\r\n                    <Row className=\"mt-5\">\r\n                        <Col lg=\"6\" >\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                          Name\r\n                        </InputLabel>\r\n                          <TextField  id=\"name\" InputLabelProps={{ shrink: true }}  size=\"medium\"  onChange={onUpdateNameChange}  value={formName} fullWidth > </TextField>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                          Type\r\n                        </InputLabel>\r\n                         <Select id=\"type\" label=\"Type\" value={formType}  size=\"medium\" fullWidth onChange={onUpdateTypeChange}   >\r\n                          <MenuItem value=\"New\">New</MenuItem>\r\n                          <MenuItem value=\"Old\">Old</MenuItem>\r\n                         </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"mt-4 pb-4\" lg=\"6\">\r\n                         <Autocomplete\r\n                           options= {fabricOptions}\r\n                          //  getOptionLabel= { (option) => option.title}\r\n                          getOptionLabel={option => option.title?option.title:option}\r\n                          id=\"auto-complete\"\r\n                          value = {formFabric}\r\n                          // onChange={(e)=> setFormFabric(e.target.value)}\r\n                          onInputChange={OnUpdateFabricChange}\r\n                          includeInputInList        \r\n                          renderInput={(params) => <TextField {...params}    label=\"Fabric\"  margin=\"normal\" />}\r\n                        />\r\n                    </Col>\r\n                    \r\n                    </Row>\r\n                    <Button type=\"submit\">Add options</Button> \r\n                    \r\n                </Tab>\r\n                <Tab eventKey=\"commerical\" title=\"COMMERICAL\">\r\n                 <p>Not yet implemented</p>\r\n                </Tab>\r\n                <Tab eventKey=\"notes\" title=\"NOTES\" >\r\n                 <p>Not yet implemented</p>\r\n                </Tab>\r\n                <Tab eventKey=\"links\" title=\"LINKS\" >\r\n                <p>Not yet implemented</p>\r\n                </Tab>\r\n            </Tabs>              \r\n             \r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n      <Col className=\"mt-5\" lg=\"12\">\r\n                      {loading ? (\r\n                        <p>Loading...</p>\r\n                      ) : error ? (\r\n                        <p>Error :</p>\r\n                      ) : (\r\n                          \r\n        \r\n                        data.options.map((option, id) => <div><TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\" >\r\n                          <TableHead>\r\n                            <TableRow>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">{option.id}</TableCell>\r\n                            <TableCell align=\"right\">{option.name}</TableCell>\r\n                          <TableCell align=\"right\">{option.type}</TableCell>\r\n                          <TableCell align=\"right\">{option.fabric}</TableCell>\r\n                          <TableCell align=\"right\"><Button id={option.id} variant=\"success\" onClick={() => { onEditInformation(option)}} >Edit</Button></TableCell>\r\n                          </TableRow>\r\n                          </TableBody>\r\n                          \r\n                          </Table>\r\n                          </TableContainer></div> )\r\n                      )}\r\n                    </Col>\r\n      </Row>\r\n      </Form>\r\n    </Container>\r\n    \r\n  </GridWrapper>\r\n)\r\n  }\r\n\r\n   export default Options;\r\n\r\n  const fabricOptions = [\r\n    {\r\n      title: \"Kurabo Selvedge Denim\"\r\n    },\r\n    {\r\n      title: \"Cone Selvedge Denim\"\r\n    },\r\n    {\r\n      title: \"Berto Selvedge Denim\"\r\n    }\r\n  ];\r\n\r\n","D:\\StyleAtlas\\frontend\\src\\components\\Sidebar.js",["146"],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 75px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 0;      /* Stay at the top */\r\n  background-color: #222; /* Black */\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: '/home',\r\n          items: [\r\n            {\r\n              path: '/home', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Home',\r\n              css: 'fa fa-globe',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/about',\r\n              name: 'About',\r\n              css: 'fa fa-th',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/nomatch',\r\n              name: 'NoMatch',\r\n              css: 'fa fa-folder-open',\r\n              key: 3\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n\r\n      onItemClick = (path) => {\r\n          this.setState({active: path})\r\n      }\r\n    render() {\r\n        const {items, activePath} = this.state;\r\n        return (\r\n            <StyledSideNav>\r\n                {\r\n                    /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n                    items.map((item) => {\r\n                    /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n            )\r\n          })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n      }\r\n}\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    padding-top:120px;\r\n    font-size: 1.7em;\r\n    color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    }  \r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const {path, onItemClick} = this.props;\r\n        onItemClick(path);\r\n    }\r\n    render() {\r\n        const { active } = this.props;\r\n      return (\r\n        <StyledNavItem active={active}>\r\n            <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n                <NavIcon></NavIcon>\r\n            </Link>\r\n        </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  const NavIcon = styled.div`\r\n  `;\r\n\r\nexport default class Sidebar extends React.Component {\r\n  render() {\r\n    return (\r\n        <SideNav></SideNav>\r\n    );\r\n  }\r\n}","D:\\StyleAtlas\\frontend\\src\\components\\Sidemenu.js",["147"],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 175px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 0;\r\n  left:75px;      /* Stay on left*/\r\n  background: #E6E6E6;\r\n  ;\r\n  color:#fff;\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: '/options',\r\n          items: [\r\n            {\r\n              path: '/workflow', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Workflows',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/timelines',\r\n              name: 'Timelines',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/options',\r\n              name: 'Options',\r\n              key: 3\r\n            },\r\n            {\r\n                path: '/designs',\r\n                name: 'Designs',\r\n                key: 4\r\n            },\r\n            {\r\n                path: '/packs',\r\n                name: 'Packs',\r\n                key: 5\r\n            },\r\n            {\r\n                path: '/tracker',\r\n                name: 'Tracker',\r\n                key: 6\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n\r\n      onItemClick = (path) => {\r\n          this.setState({active: path})\r\n      }\r\n    render() {\r\n        const {items, activePath} = this.state;\r\n        return (\r\n            <StyledSideNav>\r\n                {\r\n                    /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n                    items.map((item) => {\r\n                    /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                <NavItem path={item.path} name={item.name} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n        \r\n            )\r\n          })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n      }\r\n}\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    padding-top:40px;\r\n    font-size: 1.7em;\r\n    text-align:center;\r\n    font-weight:300;\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    } \r\n\r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const {path, onItemClick} = this.props;\r\n        onItemClick(path);\r\n    }\r\n    render() {\r\n        const { active } = this.props;\r\n      return (\r\n        <StyledNavItem active={active}>\r\n            <Link to={this.props.path} className={this.props.name} placeholder={this.props.name} onClick={this.handleClick}>\r\n                <NavName>{this.props.name}</NavName>\r\n            </Link>\r\n        </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  const NavName = styled.div`\r\n    font-size:14px;\r\n    color:#000;\r\n    text-align:center; \r\n    padding-left:30px;\r\n    padding-top:70px;\r\n    color: ${(props) => props.active ? \"black\" : \"#000\"};\r\n  `;\r\n\r\nexport default class Sidemenu extends React.Component {\r\n  render() {\r\n    return (\r\n        <SideNav></SideNav>\r\n    );\r\n  }\r\n}","D:\\StyleAtlas\\frontend\\src\\components\\Op.js",["148"],"import { } from '@material-ui/core';\r\nimport React from 'react'\r\nimport onEditInformation from '../Options'\r\nimport {  Card, Button} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Op = ({\r\n  data: {\r\n    id,\r\n    name,\r\n    type,\r\n    fabric\r\n  },\r\n\r\n  \r\n}) => (\r\n\r\n  <Card style={{ width: '50rem' }}>\r\n  <Card.Body>\r\n    <Card.Text>\r\n    <b>{id}</b> <b>Name: </b> {name} , <b>Type:</b> {type} , <b>Fabric:</b> {fabric} , <Button id={id} onClick={() => {  }} variant=\"primary\">Edit</Button>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n  \r\n \r\n)\r\n\r\nexport default Op",["149","150"],"D:\\StyleAtlas\\frontend\\src\\graphql\\index.js",[],"D:\\StyleAtlas\\frontend\\src\\graphql\\mutation.js",[],"D:\\StyleAtlas\\frontend\\src\\graphql\\queries.js",[],"D:\\StyleAtlas\\frontend\\src\\graphql\\update_mutation.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":26,"nodeType":"157","messageId":"158","endLine":2,"endColumn":35},{"ruleId":"155","severity":1,"message":"159","line":7,"column":50,"nodeType":"157","messageId":"158","endLine":7,"endColumn":65},{"ruleId":"160","severity":1,"message":"161","line":90,"column":11,"nodeType":"162","endLine":90,"endColumn":42},{"ruleId":"151","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"155","severity":1,"message":"165","line":3,"column":27,"nodeType":"157","messageId":"158","endLine":3,"endColumn":33},{"ruleId":"155","severity":1,"message":"166","line":3,"column":35,"nodeType":"157","messageId":"158","endLine":3,"endColumn":40},{"ruleId":"155","severity":1,"message":"165","line":3,"column":27,"nodeType":"157","messageId":"158","endLine":3,"endColumn":33},{"ruleId":"155","severity":1,"message":"166","line":3,"column":35,"nodeType":"157","messageId":"158","endLine":3,"endColumn":40},{"ruleId":"151","replacedBy":"167"},{"ruleId":"153","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":26,"nodeType":"157","messageId":"158","endLine":2,"endColumn":35},{"ruleId":"155","severity":1,"message":"169","line":29,"column":17,"nodeType":"157","messageId":"158","endLine":29,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":60,"column":35,"nodeType":"172","messageId":"173","endLine":60,"endColumn":37},{"ruleId":"170","severity":1,"message":"171","line":81,"column":35,"nodeType":"172","messageId":"173","endLine":81,"endColumn":37},{"ruleId":"174","severity":1,"message":"175","line":98,"column":29,"nodeType":"157","endLine":98,"endColumn":40},{"ruleId":"170","severity":1,"message":"171","line":103,"column":37,"nodeType":"172","messageId":"173","endLine":103,"endColumn":39},{"ruleId":"174","severity":1,"message":"175","line":121,"column":28,"nodeType":"157","endLine":121,"endColumn":39},{"ruleId":"155","severity":1,"message":"166","line":3,"column":27,"nodeType":"157","messageId":"158","endLine":3,"endColumn":32},{"ruleId":"155","severity":1,"message":"166","line":3,"column":27,"nodeType":"157","messageId":"158","endLine":3,"endColumn":32},{"ruleId":"155","severity":1,"message":"176","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":25},{"ruleId":"151","replacedBy":"177"},{"ruleId":"153","replacedBy":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'InputLabelProps' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["179"],["180"],"'Router' is defined but never used.","'Route' is defined but never used.",["179"],["180"],"'data_id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'onEditInformation' is defined but never used.",["179"],["180"],"no-global-assign","no-unsafe-negation"]